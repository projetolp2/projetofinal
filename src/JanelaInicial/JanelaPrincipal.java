/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JanelaInicial;

import javax.swing.JLabel;

/**
 *
 * @author jayme
 */
public class JanelaPrincipal extends javax.swing.JDialog {
    
    Hidrogenio hidrogenio;
    int posX, posY, largura, altura;
    Botao elemento = new Botao(); //Botao aonde vai o simbolo do elemento
    Botao nomeElemento = new Botao(); //Botao aonde vai o nome do elemento
    JLabel periodos; //Labels para os periodos
    JLabel familias; //Labels para as familias
    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        super.setBounds(0, 0, 1365, 740); //Maximiza a tela
        hidrogenio = new Hidrogenio(elemento, nomeElemento, numeroAtomico);
        hidrogenio.setLocation(hidrogenio.getLocation().x, hidrogenio.getLocation().y);
        posX = hidrogenio.getX();
        posY = hidrogenio.getY();
        largura = 2 + hidrogenio.getSize().width;
        altura = 2 + hidrogenio.getSize().height;
        canvas.add(hidrogenio);
        elemento.setBounds(10, 65, 130, 130); //Formata o tamanho do botao e a posiçao
        nomeElemento.setBounds(10, 20, 549, 45); //Idem ao de cima
        canvas2.setLocation(posX + (largura * 2), posY - 6);
        canvas2.add(nomeElemento); //Adiciona ao canvas2 o botao onde vai o nome do elemento
        canvas2.add(elemento); //Adiciona ao canvas2 o botao onde vai o simbolo do elemento
        canvas.add(canvas2); //Adiciona ao canvas o painel onde vai as informaçoes dos elementos
        
        tabelaPeriodica(); //Organiza a tabela periodica
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas = new javax.swing.JPanel();
        canvas2 = new javax.swing.JPanel();
        numeroAtomico = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tabela Periodica");

        canvas.setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));

        canvas2.setBorder(javax.swing.BorderFactory.createTitledBorder("Elemento"));

        javax.swing.GroupLayout canvas2Layout = new javax.swing.GroupLayout(canvas2);
        canvas2.setLayout(canvas2Layout);
        canvas2Layout.setHorizontalGroup(
            canvas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(canvas2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(numeroAtomico, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(447, Short.MAX_VALUE))
        );
        canvas2Layout.setVerticalGroup(
            canvas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(canvas2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(numeroAtomico, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout canvasLayout = new javax.swing.GroupLayout(canvas);
        canvas.setLayout(canvasLayout);
        canvasLayout.setHorizontalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(canvasLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(canvas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(546, Short.MAX_VALUE))
        );
        canvasLayout.setVerticalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(canvasLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(canvas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(299, Short.MAX_VALUE))
        );

        jMenu1.setText("Ajuda");

        jMenuItem1.setText("Periodos");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Familias");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 1239, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JanelaPrincipal dialog = new JanelaPrincipal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel canvas;
    private javax.swing.JPanel canvas2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel numeroAtomico;
    // End of variables declaration//GEN-END:variables

    private void tabelaPeriodica() {
        int num;
        for (int i = 0; i < 8; i++) { //Cria os labels e coloca nos periodos (Vertical)
            num = i + 1;
            periodos = new JLabel();
            periodos.setText("" + num);
            canvas.add(periodos);
            periodos.setBounds(posX - 10, posY + (altura * i), 10, altura);
            periodos.setVisible(true);
        }
        
        int num2;
        for (int i = 1; i < 19; i++) { //Cria os labels e coloca nas familias (Horizontal)
            num2 = i + 1;
            familias = new JLabel();
            familias.setText("" + i);
            canvas.add(familias);
            familias.setBounds(posX - 35 + (largura * i), posY - 20, largura, 10);
        }
        
        for (int i = 1; i < 7; i++) {
            Alcalinos alcalinos = new Alcalinos(elemento, nomeElemento, numeroAtomico); //Manda os paineis para que sejam adicionado as informaçoes de nome e simbolo
            alcalinos.setAlcalinos(alcalinos, posX, posY, altura, i, canvas);
        }
        
        for (int i = 1; i < 7; i++) {
            AlcalinosTerrosos alcTerrosos = new AlcalinosTerrosos(elemento, nomeElemento, numeroAtomico); //Manda os paineis para que sejam adicionado as informaçoes de nome e simbolo
            alcTerrosos.setAlcalinosTerrosos(alcTerrosos, posX, posY, largura, altura, i, canvas);
        }
        
        for (int i = 2; i < 12; i++) {
            for (int j = 3; j < 7; j++) {
                MetaisDeTransiçao metais = new MetaisDeTransiçao(elemento, nomeElemento, numeroAtomico); //Manda os paineis para que sejam adicionado as informaçoes de nome e simbolo
                metais.setMetaisDeTransiçao(metais, posX, posY, largura, altura, i, j, canvas);
            }
        }
        for (int i = 12; i < 17; i++) {
            for (int j = 1; j < 7; j++) {
                Representativos representativos = new Representativos(elemento, nomeElemento, numeroAtomico); //Manda os paineis para que sejam adicionado as informaçoes de nome e simbolo
                representativos.setRepresentativos(representativos, posX, posY, largura, altura, i, j, canvas);
            }
        }
        
        for (int i = 0; i < 7; i++) {
            GasesNobres nobres = new GasesNobres(elemento, nomeElemento, numeroAtomico); //Manda os paineis para que sejam adicionado as informaçoes de nome e simbolo
            nobres.setGasesNobres(nobres, posX, posY, largura, altura, i, canvas);
        }
    }
}

